
%make a function
% find a good way to store T, R, color, tex and PCS
segment = true;

serial_1 = '618204002727';
serial_2 = '616205005055';
path_to_pcs = 'pointclouds/';
path_to_back = 'data_6_balls/';

PC_from = pcread(strcat(path_to_pcs,serial_1,'.ply'));
PC_to = pcread(strcat(path_to_pcs,serial_2,'.ply'));

if segment
    fore_1 = strcat(path_to_pcs, serial_1, 'color_fore.tif');
    back_1 = strcat(path_to_back, serial_1, 'color_back.tif');
    fore_2 = strcat(path_to_pcs, serial_2, 'color_fore.tif');
    back_2 = strcat(path_to_back, serial_2, 'color_back.tif');
    tex_1  = strcat(path_to_pcs, serial_1, 'texture_fore.tif');
    tex_2  = strcat(path_to_pcs, serial_2, 'texture_fore.tif');
    
    isObj_1 = getSegments(back_1, fore_1, 1);
    isObj_2 = getSegments(back_2, fore_2, 1);
    
    PC_from = getObjPointclouds(isObj_1, PC_from, tex_1);
    PC_from = PC_from{1};
    PC_to = getObjPointclouds(isObj_2, PC_to, tex_2);
    PC_to = PC_to{1};
end

from_transformed = zeros(PC_from.Count,3);
from_points = PC_from.Location;

for i = 1:PC_from.Count
    from_transformed(i,:)=(R*from_points(i,:)')'+T';
end
from_transformed_PC = pointCloud(from_transformed, 'Color', PC_from.Color);


PC_merged = pcmerge(PC_to,from_transformed_PC, 0.0001);

figure;
subplot(1,2,1);
pcshow(from_transformed_PC);
title('moving');
subplot(1,2,

figure;
pcshow(PC_merged);
title('Pointclouds merged');
view([0 -90])

[tform, ICP_PC, dist] = pcregrigid(from_transformed_PC, PC_to);
figure;
pcshow(ICP_PC);
title('ICP');
view([0 -90])

% figure;
% pcshow(PC_merged);
% hold on;
% plot(pcshow(pcfitcylinder(PC_merged, 0.01)));
% plot(pcshow(pcfitplane(PC_merged, 0.01)));
